import React, { useState, useEffect } from 'react';
import { Card } from './components/ui/card'; // Assuming Card will be part of the base UI setup

function App() {
  const [artifacts, setArtifacts] = useState([]);
  const [selectedArtifact, setSelectedArtifact] = useState(null);
  const [ArtifactComponent, setArtifactComponent] = useState(null);

  useEffect(() => {
    const loadArtifacts = async () => {
      try {
        const response = await fetch('/claude_artifacts_manifest.json');
        if (!response.ok) {
          console.error("Failed to fetch artifacts. Ensure claude_artifacts_manifest.json is in the public folder and the server is running.");
          setArtifacts([]);
          return;
        }
        const data = await response.json();
        setArtifacts(data);
      } catch (error) {
        console.error("Error loading artifacts:", error);
        setArtifacts([]);
      }
    };
    loadArtifacts();
  }, []);

  useEffect(() => {
    if (selectedArtifact && selectedArtifact.path) {
      const loadComponent = async () => {
        try {
            // Corrected import path
            const componentModule = await import(`./${selectedArtifact.path}`);
            setArtifactComponent(() => componentModule.default);
        } catch (error) {
            // Corrected error message
            console.error(`Error loading artifact component from path: ./${selectedArtifact.path}`, error);
            setArtifactComponent(() => () => <div>Error loading component. Check console.</div>);
        }
      };
      loadComponent();
    } else {
      setArtifactComponent(null);
    }
  }, [selectedArtifact]);

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Claude Artifacts Viewer</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {(artifacts || []).map((artifact) => (
          <Card
            key={artifact.id}
            className="p-4 cursor-pointer hover:shadow-lg transition-shadow"
            onClick={() => setSelectedArtifact(artifact)}
          >
            <h2 className="text-xl font-semibold">{artifact.name}</h2>
          </Card>
        ))}
      </div>
      {selectedArtifact && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
          <div className="bg-white p-6 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-2xl font-bold">{selectedArtifact.name}</h2>
              <button
                className="text-gray-500 hover:text-gray-700 text-2xl"
                onClick={() => setSelectedArtifact(null)}
              >
                &times;
              </button>
            </div>
            <div id="artifact-component-container">
              {ArtifactComponent ? <ArtifactComponent /> : <p>Loading component...</p>}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;
